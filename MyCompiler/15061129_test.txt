const char _ = '_', p_ = '+', m__ = '-', s0 = '*', d_0 = '/', a0a = 'a', _00 = '0'; 	
const int _zero = 0, _num = 4, _pnum = +3, _mnum = -9;
const int __num = 20, __pnum = +56, __mnum = -78;
const int ___num = 5783, ___pnum = +326, ___mnum = -111;								
const int _k1 = 0, _k2 = +100, _k3 = -1000;												
const char _k4 = 'a', _k5 = '_', _k6 = 'A', _k7 = '-', _k8 = '*', _k9 = '0';

int v1, fibarray[1000];																	
char c1, arrayc[1000];
int _4fib(int num)											
{
	const char m = '_';
	int temp, fib1, fib2;
		if(- num < -1)							
		{
			if (fibarray[num - 1] <= -1)						
			{
				fib1 = _4fib(num - 1);				
			}
			else {
				fib1 = fibarray[num - 1];
			}
			fib2 = fibarray[num - 2];
			temp = fib1 + fib2; 
			fibarray[num] = temp;						
			return (temp) ;
		}
		else{
		
			if(_num)								
			{
				fibarray[1] = 1;
				return (1);
			}
			else{
				fibarray[0] = + 0;							
				return (- 0);
			}
		}
	;
}

void printStar
{
	printf("*");								
	return ;												
}
void printChar(char c, int num)
{
	if(num == 0)											
	{	
		return ;
	}
	else{
		printf(c);									printChar(c, num - 1);								
	}
}

char returnStar
{
	printf('*');											
	return ('*');												
}
void main()													
{
	const char a = '_';
	int testarray[10], max, i, num, _no;
	char c;
	
	i = 0 ;
	while(i <= 999)
	{
		fibarray[i] = - i;
		i = i + 1;
	}
	
	
	printf( _);							
	printf(" ");
	printf( - fibarray[+ _zero]);				 
	printf(" ");
	printf( + fibarray[- - 9]);	
	printf(" ");
	printf( + (- ___num));		
	printf(" ");
	printf( - (100));							
	printf(" ");
	printf( - + 23);								printf(" ");
	printf( - 'a');									printf(" ");
	printf( - _4fib(_4fib(_num)));
	printf(" ");
												
	printf( +(- 'a') * (+ 'b'));
	printf(" ");
	printf( _4fib(__num) / _4fib(6));
	printf(" ");
	printf(_k1 * _k2);
	printf(" ");
	printf( _k1 / _k2);
	printf(" ");

	printf(+ (-'a') * (+'b') + _4fib(__num) / _4fib(6));
	printf(" ");
	printf( _k1 * _k2 - _k1 / _k2);
	printf(" ");
	printf(-_k2 + (_k3 + _k3));
	printf(" ");
	printf( _k3 * (_k1 + fibarray[- - 9]));
	printf(" ");

	printf( _k4);
	printf( _k5);
	printf( _k6);
	printf( _k7);
	printf( _k8);
	printf( _k9);
	
	printf("  ");								
	
	max = 3;														
	i = max;										
	while(i)									
	{
		printStar;										i = i - 1;								
	}
	printf("  ");
	
	scanf(num, c);										
	printChar(c, max);									
	printf("  ");					
	
	
	if(num < 2)									
	{
		printf("num is less than 2!");						
	}
	else{
		if(num > 45)								
		{
			printf("num is more than 45!");
		}
		else{
			_4fib(num);							
			printf("the fib is : ");
			while(num >= 0){						
				printf("no.", num);					
				printf(" is ");	
				printf( - (- fibarray[num]));								printf(" ");
				num = num - 1;	
			}
		}
	}

	
	
	printf("  ");
	i = max;
	;										while(i != 0)											
	{
		returnStar;								
		printf(returnStar);							 
		i = i - 1;
	}
	
	printf("please input a number from 0 to 4: ");
	scanf(num);									
	switch(num)												
	{
		case 0: printf(0);
		case 1: printf(1);
		case 2: printf(2);
		case 3: printf(3);
		case 4: printf(4);
		case 5: printf(5);
		case 6: printf(6);
		case 7: printf(7);
		case 8: printf(8);
		case 9: printf(9);
		default: printf("out of range!");
	}
	printf("");
}
	

