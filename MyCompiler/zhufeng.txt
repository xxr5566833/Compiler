const int MAX=10;
const char A='a';
const char plus = '+', minus = '-', mult = '*', div = '/';

int n,x,y,kind,m,ans,_a,_b;
char ch,alphabet[26];

void testDefine
{
    const int int0=0,int1=1,
        int2=2,int3=3,int4=4,
        int5=5,int6=6,int7=7,
        int8=8,int9=9,int10=10,
        int11=11,int12=12,int13=13,
        int14=14,int15=15,int16=16,
        int17=17,int18=18,int19=19;

    const int int_0=0,int_1=-1,
        int_2=-2,int_3=-3,int_4=-4,
        int_5=-5,int_6=-6,int_7=-7,
        int_8=-8,int_9=-9,int_10=-10,
        int_11=-11,int_12=-12,int_13=-13,
        int_14=-14,int_15=-15,int_16=-16,
        int_17=-17,int_18=-18,int_19=-19;

    const int _int0=0,_int1=+1,
        _int2=+2,_int3=+3,_int4=+4,
        _int5=+5,_int6=+6,_int7=+7,
        _int8=+8,_int9=+9,_int10=+10,
        _int11=+11,_int12=+12,_int13=+13,
        _int14=+14,_int15=+15,_int16=+16,
        _int17=+17,_int18=+18,_int19=+19;

    const char char0='0',char1='1',
        char2='2',char3='3',char4='4',
        char5='5',char6='6',char7='7',
        char8='8',char9='9';

    int var0,var1,arr1[1],var2,arr2[2],
        var3,arr3[3],var4,arr4[4],var5,arr5[5],
        var6,arr6[6],var7,arr7[7],var8,arr8[8],
        var9,arr9[9],var10,arr10[10],var11,arr11[11],
        var12,arr12[12],var13,arr13[13],var14,arr14[14],
        var15,arr15[15],var16,arr16[16],var17,arr17[17],
        var18,arr18[18],var19,arr19[19];
}

int fibo(int n)
{
    if (n<0) return(-1);
    else if (n==0) return(0);
    else if (n==1) return(1);
    else if (n>MAX) return(-2);
    else return(fibo(n-1)+fibo(n-2));
}

char upcase(char x)
{
    char y;
    if (x>='a')
        if (x<='z')
        {
            y = x - 'a' + 'A';
            return(y);
        }
        else return(x);
    else return(x);
}

char lowcase(char x)
{
    char y;
    if (x>='A')
        if (x<='Z')
        {
            y = x - 'A' + 'a';
            return(y);
        }
        else return(x);
    else return(x);
}

void printspace
{
    printf(" ");
}

int operation(int x, int y, int kind)
{
    switch (kind)
    {
        case 1:
        {
             printf("operation:",x+y);
             return(x+y);
        }
        case 2:
        {
            printf("operation:",x-y);
            return(x-y);
        }
        case 3:
        {
            printf("operation:",x*y);
            return(x*y);
        }
        case 4:
        {
            if (y!=0)
            {
                printf("operation:",x/y);
                return(x/y);
            }
            else{
                printf("cannot div 0!!!");
                return(0);
            }
        }
        default:
        {
            printf("operation kind is not in [+-*/]!!!");
            return(-1);
        }
    }
}

void display(int m)
{
    int i;
    char letter;
    if (m<=0)
        return;
    else if (m>26)
        m = 26;
    else {
        i = 0;
        letter = A;
        while(i<m)
        {
            alphabet[i] = upcase(letter);
            alphabet[i] = upcase(letter);
            printf(alphabet[i]);
            i = i + 1;
            letter = letter + 1;
        }
        printspace;
        i = 0;
        while (i<m)
        {
            alphabet[i] = lowcase(alphabet[i]);
            printf(alphabet[i]);
            i = i + 1;
        }
        printspace;
    }
}

void expre
{
    int x,y,z;
    scanf(x,y);
    z = +((x+y) - (-y*(-2)) + (-2*0));
    printf("expre:",z);
    printspace;
}

int mod(int x, int y)
{
    int z;
    z = x - x/y*y;
    return(z);
}

int gcd(int a, int b)
{
    if (b==0) return(0);
    else if (mod(a,b)==0)
        return(b);
    else return(gcd(b, mod(a,b)));
}

void optimize
{
    int i,a,b,c,t1,t2,t3,t4;
    i = 0;
    c = 1;
    b = 1;
    while (i<10000)
    {
        i = i+1;
        t1 = -c;
        t2 = b*t1;
        t3 = -c;
        c = b*t3;
        t4 = t2+c;
        a = t4;
    }
    printf(a);
    printspace;
    printf(b);
    printspace;
    printf(c);
    printspace;
    printf(t1);
    printspace;
    printf(t2);
    printspace;
    printf(t3);
    printspace;
    printf(t4);
}

void process
{
    int choice;
    char choice_ch;
    scanf(choice);
    choice_ch = choice +'a'-1;
    switch (choice_ch)
    {
        case 'a':
            expre;
        case 'b':
        {
            scanf(n);
            ans = fibo(n);
            printf("fibo:",ans);
            printspace;
        }
        case 'c':
        {
            scanf(x,y,kind);
            ans = operation(x,y,kind);
            printspace;
        }
        case 'd':
        {
            scanf(m);
            display(m);
        }
        case 'e':
        {
            scanf(_a,_b);
            printf("gcd:",gcd(_a,_b));
            printspace;
        }
        case 'f':
            printf("string:!#$%&'()*+,-./:;<=>?@[\]^_`{|}~");
        default:
            optimize;
    }
}

void main()
{
    int i,num;
    i = 0;
    testDefine;
    scanf(num);
    while (i<num)
    {
        i = i + 1;
        process;
    }
    return;
}