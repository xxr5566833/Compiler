init fib
$t0 = _sImplE_int_NuM
$t0 = 0 - $t0
if $t0 >= -1 then goto $label0
$t1 = _sImplE_int_NuM
$t1 = $t1 - 1
$t2 = _arRaY_Int_FIBArRay[$t1]
if $t2 > -1 then goto $label2
$t3 = _sImplE_int_NuM
$t3 = $t3 - 1
push $t3
call fib
$t4 = #RET
FIB1 = $t4
goto $label3
$label2:
$t5 = _sImplE_int_NuM
$t5 = $t5 - 1
$t6 = _arRaY_Int_FIBArRay[$t5]
FIB1 = $t6
$label3:
$t7 = _sImplE_int_NuM
$t7 = $t7 - 2
$t8 = _arRaY_Int_FIBArRay[$t7]
Fib2 = $t8
$t9 = FIB1
$t10 = Fib2
$t9 = $t9 + $t10
_iNt_tEMp = $t9
$t11 = _sImplE_int_NuM
$t12 = _iNt_tEMp
_arRAY_INt_FiBARRAy[$t11] = $t12
$t13 = _iNt_tEMp
#RET = $t13
goto fib$end
goto $label1
$label0:
$t14 = _sImplE_int_NuM
$t15 = _sImplE_int_NuM
$t15 = $t15 + 1
$t14 = $t14 * $t15
$t16 = _sImplE_int_NuM
$t16 = $t16 + 1
$t14 = $t14 \ $t16
if $t14 == 0 then goto $label4
$t17 = 1
_aRRAY_Int_fiBArRaY[1] = $t17
$t18 = 1
_aRrAY_iNt_fibaRRAy_tEmP[1] = $t18
$t19 = _ARRAY_Int_FIBARrAY_TeMP[1]
$t20 = _arRaY_Int_FIBArRay[$t19]
$t21 = _ARRAY_Int_FIBARrAY_TeMP[$t20]
$t22 = _ARRAY_Int_FIBARrAY_TeMP[1]
$t23 = _arRaY_Int_FIBArRay[$t22]
$t21 = $t21 * $t23
$t21 = $t21 + 0
#RET = $t21
goto fib$end
goto $label5
$label4:
$t24 = 0
_ArRaY_InT_FibARrAY[0] = $t24
$t25 = 0
_ArRay_iNt_fiBarRAY_teMP[0] = $t25
$t26 = _arRaY_Int_FIBArRay[0]
$t27 = _ARRAY_Int_FIBARrAY_TeMP[$t26]
$t28 = _ARRAY_Int_FIBARrAY_TeMP[0]
$t29 = _arRaY_Int_FIBArRay[$t28]
$t27 = $t27 * $t29
$t27 = $t27 + 0
#RET = $t27
goto fib$end
$label5:
$label1:
fib$end:
ret fib
init MAIN1
_iNT_i = 0
$label6:
$t30 = _iNT_i
if $t30 >= 46 then goto $label7
$t31 = _iNT_i
$t32 = -1
_ARRaY_iNt_fibARRay_tEmP[$t31] = $t32
$t33 = _iNT_i
$t34 = -1
_aRRaY_iNT_fibaRraY[$t33] = $t34
$t35 = _iNT_i
$t35 = $t35 + 0
$t36 = 48
_ARRAY_CHAr_A[$t35] = $t36
$t37 = _iNT_i
$t38 = 48
_ArRAY_CHAr_c[$t37] = $t38
$t39 = _iNT_i
$t39 = $t39 + 1
$t39 = $t39 - 0
_iNT_i = $t39
goto $label6
$label7:
_SIMPlE_int_NUM = 0
printf 0
scanf int _SIMPlE_int_NUM
$t40 = _SIMPlE_int_NUM
if $t40 >= 2 then goto $label8
printf 1
goto $label9
$label8:
$t41 = _SIMPlE_int_NUM
if $t41 <= 45 then goto $label10
printf 2
goto $label11
$label10:
$t42 = _SIMPlE_int_NUM
push 0
call fib
$t43 = #RET
$t42 = $t42 + $t43
push 1
call fib
$t44 = #RET
$t42 = $t42 - $t44
push 2
call fib
$t45 = #RET
$t42 = $t42 + $t45
push $t42
call fib
$label12:
$t46 = _SIMPlE_int_NUM
if $t46 < 0 then goto $label13
$t47 = _SIMPlE_int_NUM
$t48 = _arRaY_Int_FIBArRay[$t47]
$t48 = 0 - $t48
$t48 = 0 - $t48
printf $t48
$t49 = _SIMPlE_int_NUM
$t50 = _ArRAy_INt_fIBArRAY_tEMp[$t49]
if $t50 == -1 then goto $label14
printf 3
goto $label15
$label14:
$label15:
printf 4
$t51 = _SIMPlE_int_NUM
$t51 = $t51 - 1
_SIMPlE_int_NUM = $t51
goto $label12
$label13:
$label11:
$label9:
MAIN1$end:
ret MAIN1
init printArray
A = 1
$t52 = _siMpLe_InT_LeNgth
if $t52 < 1 then goto $label16
$t53 = _arRAY_InT_quICkSORt_[0]
printf $t53
goto $label17
$label16:
#RET = -1
goto printArray$end
$label17:
$label18:
$t54 = A
$t55 = _siMpLe_InT_LeNgth
if $t54 >= $t55 then goto $label19
printf 5
$t56 = A
$t57 = _arRAY_InT_quICkSORt_[$t56]
printf $t57
$t58 = A
$t58 = $t58 + 1
A = $t58
goto $label18
$label19:
#RET = 0
goto printArray$end
printArray$end:
ret printArray
init quiCKSOrt
$t59 = hEAd
$t60 = TAIL
if $t59 < $t60 then goto $label20
goto quiCKSOrt$end
goto $label21
$label20:
$label21:
$t61 = hEAd
$t61 = $t61 + 1
a = $t61
$t62 = hEAd
B = $t62
$label22:
$t63 = a
$t64 = TAIL
if $t63 > $t64 then goto $label23
$t65 = a
$t66 = _arRAY_InT_quICkSORt_[$t65]
$t67 = B
$t68 = _arRAY_InT_quICkSORt_[$t67]
if $t66 >= $t68 then goto $label24
$t69 = a
$t70 = _arRAY_InT_quICkSORt_[$t69]
tMp = $t70
$t71 = a
$t72 = B
$t73 = _arRAY_InT_quICkSORt_[$t72]
_ArraY_INt_quicKSOrt_[$t71] = $t73
$t74 = B
$t75 = tMp
_arRAy_Int_quICKSort_[$t74] = $t75
$t76 = a
$t77 = _arRAY_InT_quICkSORt_[$t76]
tMp = $t77
$t78 = a
$t79 = B
$t79 = $t79 + 1
$t80 = _arRAY_InT_quICkSORt_[$t79]
_ArRAy_iNT_qUicksOrt_[$t78] = $t80
$t81 = B
$t81 = $t81 + 1
$t82 = tMp
_arRAY_inT_QuICksort_[$t81] = $t82
$t83 = B
$t83 = $t83 + 1
B = $t83
$t84 = _siMple_Int_COUNT
$t84 = $t84 + 1
_siMple_Int_COUNT = $t84
goto $label25
$label24:
$label25:
$t85 = a
$t85 = $t85 + 1
a = $t85
goto $label22
$label23:
$t86 = hEAd
push $t86
$t87 = B
$t87 = $t87 - 1
push $t87
call quiCKSOrt
$t88 = B
$t88 = $t88 + 1
push $t88
$t89 = TAIL
push $t89
call quiCKSOrt
goto quiCKSOrt$end
quiCKSOrt$end:
ret quiCKSOrt
init rETurn1
#RET = 1
goto rETurn1$end
rETurn1$end:
ret rETurn1
init returN999
#RET = 999
goto returN999$end
returN999$end:
ret returN999
init reTURnMInus998
#RET = -998
goto reTURnMInus998$end
reTURnMInus998$end:
ret reTURnMInus998
init main2
_siMple_Int_COUNT = 0
i = 0
printf 6
scanf int _siMpLe_InT_LeNgth
$t90 = _siMpLe_InT_LeNgth
if $t90 == 0 then goto $label26
$t91 = _siMpLe_InT_LeNgth
$t92 = _siMpLe_InT_LeNgth
$t92 = $t92 * _siMpLe_InT_LeNgth
$t91 = $t91 + $t92
$t91 = $t91 \ _siMpLe_InT_LeNgth
$t91 = $t91 - 1
_siMpLe_InT_LeNgth = $t91
goto $label27
$label26:
$label27:
printf 7
$label28:
$t93 = i
$t94 = _siMpLe_InT_LeNgth
if $t93 >= $t94 then goto $label29
scanf int rEtuRn1
$t95 = i
$t96 = rEtuRn1
_ArRaY_inT_quiCKsORT_[$t95] = $t96
$t97 = i
call returN999
$t98 = #RET
$t97 = $t97 + $t98
call reTURnMInus998
$t99 = #RET
$t97 = $t97 + $t99
i = $t97
goto $label28
$label29:
$t100 = _siMpLe_InT_LeNgth
$t101 = 0
if $t101 != $t100 then goto $label31
call PrINTARrAy
goto $label30
$label31:
$t102 = 1
if $t102 != $t100 then goto $label32
call pRINTARRAy
goto $label30
$label32:
$t103 = _siMpLe_InT_LeNgth
if $t103 >= 0 then goto $label33
printf 8
goto main2$end
goto $label34
$label33:
call returN999
$t104 = #RET
$t104 = $t104 - 999
push $t104
$t105 = _siMpLe_InT_LeNgth
call returN999
$t106 = #RET
call reTURnMInus998
$t107 = #RET
$t106 = $t106 + $t107
$t105 = $t105 - $t106
push $t105
call quiCKSOrt
call prinTArraY
$label34:
$label30:
printf 9
$t108 = _siMple_Int_COUNT
printf $t108
goto main2$end
main2$end:
ret main2
init reTURna
#RET = 65
goto reTURna$end
reTURna$end:
ret reTURna
init rETURNPLUS
#RET = 43
goto rETURNPLUS$end
rETURNPLUS$end:
ret rETURNPLUS
init RetuRnStaR
#RET = 42
goto RetuRnStaR$end
RetuRnStaR$end:
ret RetuRnStaR
init RETurnCHAr
$t109 = C
#RET = $t109
goto RETurnCHAr$end
RETurnCHAr$end:
ret RETurnCHAr
init mAin3
i = 0
$label35:
$t110 = i
if $t110 >= 45 then goto $label36
$t111 = i
$t112 = 65
_ArRAY_cHaR_A[$t111] = $t112
$t113 = i
$t114 = 100
_arRAy_iNt_a[$t113] = $t114
$t115 = i
$t116 = -1
_aRRAY_InT_fiBaRRAY[$t115] = $t116
$t117 = i
$t117 = $t117 + 1
i = $t117
goto $label35
$label36:
i = 0
printf 10
printf 95
_siMplE_Char_T = 65
printf 11
$t118 = _siMplE_Char_T
printf $t118
printf 12
printf 43
printf 13
$t119 = _ARRAY_chaR_A[1]
printf $t119
printf 14
$t120 = _ARRAY_chaR_A[5]
push $t120
call RETurnCHAr
$t121 = #RET
printf $t121
printf 15
call reTURna
$t122 = #RET
printf $t122
printf 16
printf 34545
printf 17
printf -400
printf 18
printf -1563
printf 19
printf 1000
printf 20
printf 0
printf 21
printf -888
printf 22
printf 456
printf 23
$t123 = _Array_iNT_A[20]
printf $t123
printf 24
$t124 = _Array_iNT_A[1]
printf $t124
printf 25
push 0
call fib
$t125 = #RET
printf $t125
printf 26
push 1
call fib
$t126 = #RET
printf $t126
printf 27
push 5
call fib
$t127 = #RET
printf $t127
printf 28
printf 100
printf 29
$t128 = _Array_iNT_A[20]
printf $t128
printf 30
push 5
call fib
$t129 = #RET
printf $t129
printf 31
$t130 = _siMplE_Char_T
$t130 = 95 * $t130
printf $t130
printf 32
$t131 = _ARRAY_chaR_A[1]
$t131 = 43 \ $t131
printf $t131
printf 33
$t132 = _ARRAY_chaR_A[1]
$t132 = $t132 \ -400
printf $t132
printf 34
push 47
call RETurnCHAr
$t133 = #RET
push 1
call fib
$t133 = $t133 * #RET
printf $t133
printf 35
printf 355200
printf 36
push 5
call fib
$t134 = #RET
$t134 = 1000 \ $t134
printf $t134
printf 37
$t135 = _siMplE_Char_T
$t135 = 95 \ $t135
push 1
call fib
$t135 = $t135 * #RET
printf $t135
printf 38
push 0
call fib
$t136 = #RET
$t136 = 355200 * $t136
printf $t136
printf 39
$t137 = _siMplE_Char_T
$t137 = 355200 \ $t137
printf $t137
printf 40
$t138 = _ARRAY_chaR_A[5]
push $t138
call RETurnCHAr
$t139 = #RET
$t140 = _ARRAY_chaR_A[5]
push $t140
call RETurnCHAr
$t139 = $t139 * #RET
$t141 = _ARRAY_chaR_A[5]
push $t141
call RETurnCHAr
$t139 = $t139 * #RET
printf $t139
printf 41
$t142 = _siMplE_Char_T
$t142 = 355200 \ $t142
$t142 = $t142 \ 355200
$t143 = _Array_iNT_A[20]
$t142 = $t142 * $t143
printf $t142
printf 42
$t144 = _ARRAY_chaR_A[5]
push $t144
call RETurnCHAr
$t145 = #RET
$t146 = _ARRAY_chaR_A[5]
push $t146
call RETurnCHAr
$t145 = $t145 * #RET
$t147 = _ARRAY_chaR_A[5]
push $t147
call RETurnCHAr
$t145 = $t145 * #RET
$t145 = 95 * $t145
printf $t145
printf 43
push 6
call fib
$t148 = #RET
push $t148
call fib
$t149 = #RET
push 5
call fib
$t150 = #RET
$t149 = $t149 - $t150
push $t149
call fib
$t151 = #RET
printf $t151
printf 44
push 0
call fib
$t152 = #RET
push $t152
call fib
$t153 = #RET
push $t153
call fib
$t154 = #RET
$t155 = _Array_iNT_A[$t154]
$t156 = _Array_iNT_A[0]
$t157 = _Array_iNT_A[0]
$t156 = $t156 \ $t157
push $t156
call fib
$t158 = #RET
push $t158
call fib
$t159 = #RET
$t160 = _Array_iNT_A[$t159]
$t155 = $t155 - $t160
push $t155
call fib
$t161 = #RET
$t162 = _Array_iNT_A[$t161]
printf $t162
printf 45
printf -888
printf 46
call reTURna
$t163 = #RET
$t163 = 0 - $t163
printf $t163
printf 47
push 0
call fib
$t164 = #RET
push $t164
call fib
$t165 = #RET
push $t165
call fib
$t166 = #RET
$t167 = _Array_iNT_A[$t166]
$t168 = _Array_iNT_A[0]
$t169 = _Array_iNT_A[0]
$t168 = $t168 \ $t169
push $t168
call fib
$t170 = #RET
push $t170
call fib
$t171 = #RET
$t172 = _Array_iNT_A[$t171]
$t167 = $t167 - $t172
push $t167
call fib
$t173 = #RET
$t174 = _Array_iNT_A[$t173]
$t174 = 0 - $t174
$t175 = _siMplE_Char_T
$t175 = 355200 \ $t175
$t175 = $t175 \ 355200
$t176 = _Array_iNT_A[20]
$t175 = $t175 * $t176
$t174 = $t174 + $t175
printf $t174
printf 48
push 0
call fib
$t177 = #RET
push $t177
call fib
$t178 = #RET
push $t178
call fib
$t179 = #RET
$t180 = _Array_iNT_A[$t179]
$t181 = _Array_iNT_A[0]
$t182 = _Array_iNT_A[0]
$t181 = $t181 \ $t182
push $t181
call fib
$t183 = #RET
push $t183
call fib
$t184 = #RET
$t185 = _Array_iNT_A[$t184]
$t180 = $t180 - $t185
push $t180
call fib
$t186 = #RET
$t187 = _Array_iNT_A[$t186]
$t188 = _ARRAY_chaR_A[5]
push $t188
call RETurnCHAr
$t189 = #RET
$t190 = _ARRAY_chaR_A[5]
push $t190
call RETurnCHAr
$t189 = $t189 * #RET
$t191 = _ARRAY_chaR_A[5]
push $t191
call RETurnCHAr
$t189 = $t189 * #RET
$t189 = 95 * $t189
$t187 = $t187 - $t189
printf $t187
printf 49
push 0
call fib
$t192 = #RET
push $t192
call fib
$t193 = #RET
push $t193
call fib
$t194 = #RET
$t195 = _Array_iNT_A[$t194]
$t196 = _Array_iNT_A[0]
$t197 = _Array_iNT_A[0]
$t196 = $t196 \ $t197
push $t196
call fib
$t198 = #RET
push $t198
call fib
$t199 = #RET
$t200 = _Array_iNT_A[$t199]
$t195 = $t195 - $t200
push $t195
call fib
$t201 = #RET
$t202 = _Array_iNT_A[$t201]
$t203 = _ARRAY_chaR_A[5]
push $t203
call RETurnCHAr
$t204 = #RET
$t205 = _ARRAY_chaR_A[5]
push $t205
call RETurnCHAr
$t204 = $t204 * #RET
$t206 = _ARRAY_chaR_A[5]
push $t206
call RETurnCHAr
$t204 = $t204 * #RET
$t204 = 95 * $t204
$t202 = $t202 - $t204
push 6
call fib
$t207 = #RET
push $t207
call fib
$t208 = #RET
push 5
call fib
$t209 = #RET
$t208 = $t208 - $t209
push $t208
call fib
$t210 = #RET
$t210 = 0 - $t210
$t202 = $t202 - $t210
push 0
call fib
$t211 = #RET
$t211 = 355200 * $t211
$t202 = $t202 + $t211
printf $t202
printf 50
push 5
call fib
$t212 = #RET
$t212 = 1000 \ $t212
$t212 = $t212 - 200
push 0
call fib
$t213 = #RET
push $t213
call fib
$t214 = #RET
push $t214
call fib
$t215 = #RET
$t216 = _Array_iNT_A[$t215]
$t217 = _Array_iNT_A[0]
$t218 = _Array_iNT_A[0]
$t217 = $t217 \ $t218
push $t217
call fib
$t219 = #RET
push $t219
call fib
$t220 = #RET
$t221 = _Array_iNT_A[$t220]
$t216 = $t216 - $t221
push $t216
call fib
$t222 = #RET
$t223 = _Array_iNT_A[$t222]
$t224 = _ARRAY_chaR_A[5]
push $t224
call RETurnCHAr
$t225 = #RET
$t226 = _ARRAY_chaR_A[5]
push $t226
call RETurnCHAr
$t225 = $t225 * #RET
$t227 = _ARRAY_chaR_A[5]
push $t227
call RETurnCHAr
$t225 = $t225 * #RET
$t225 = 95 * $t225
$t223 = $t223 - $t225
push 5
call fib
$t228 = #RET
$t228 = 3 + $t228
push $t228
call fib
$t229 = #RET
push 5
call fib
$t230 = #RET
$t229 = $t229 - $t230
push $t229
call fib
$t231 = #RET
push $t231
call fib
$t232 = #RET
$t232 = 0 - $t232
$t223 = $t223 - $t232
push 0
call fib
$t233 = #RET
$t233 = 355200 * $t233
$t223 = $t223 + $t233
push 0
call fib
$t234 = #RET
push $t234
call fib
$t235 = #RET
push $t235
call fib
$t236 = #RET
$t237 = _Array_iNT_A[$t236]
$t238 = _Array_iNT_A[0]
$t239 = _Array_iNT_A[0]
$t238 = $t238 \ $t239
push $t238
call fib
$t240 = #RET
push $t240
call fib
$t241 = #RET
$t242 = _Array_iNT_A[$t241]
$t237 = $t237 - $t242
push $t237
call fib
$t243 = #RET
$t244 = _Array_iNT_A[$t243]
$t245 = _ARRAY_chaR_A[5]
push $t245
call RETurnCHAr
$t246 = #RET
$t247 = _ARRAY_chaR_A[5]
push $t247
call RETurnCHAr
$t246 = $t246 * #RET
$t248 = _ARRAY_chaR_A[5]
push $t248
call RETurnCHAr
$t246 = $t246 * #RET
$t246 = 95 * $t246
$t244 = $t244 - $t246
$t244 = 0 - $t244
push 5
call fib
$t249 = #RET
$t249 = 3 + $t249
push $t249
call fib
$t250 = #RET
push 5
call fib
$t251 = #RET
$t250 = $t250 - $t251
push $t250
call fib
$t252 = #RET
push $t252
call fib
$t253 = #RET
$t253 = 0 - $t253
$t244 = $t244 - $t253
push 0
call fib
$t254 = #RET
$t254 = 355200 * $t254
$t244 = $t244 + $t254
$t223 = $t223 \ $t244
$t212 = $t212 + $t223
push $t212
call fib
$t255 = #RET
printf $t255
mAin3$end:
ret mAin3
init main
printf 51
scanf char ChOOSE
$t256 = ChOOSE
$t257 = 97
if $t257 != $t256 then goto $label38
call main1
goto $label37
$label38:
$t258 = 98
if $t258 != $t256 then goto $label39
call MAIn2
goto $label37
$label39:
$t259 = 99
if $t259 != $t256 then goto $label40
call MAin3
goto $label37
$label40:
printf 52
$label37:
exit 
