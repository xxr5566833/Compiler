一共有246条四元式

init _aSfunc_1
$t0 = a + 0
aa = $t0 + 0
$t1 = c + 0
cc = $t1 + 0
bb = 1 + 0
$t2 = aa + 0
$t3 = bb + 0
if $t2 <= $t3 then goto $label0
$t4 = cc + 0
$t4 = $t4 - 105
$t5 = 0 + 0
if $t5 != $t4 then goto $label3
$t6 = a + 0
$t7 = aa + 0
$t8 = bb + 0
$t7 = $t7 - $t8
push $t7
push 105
call _aSfunc_1
$t6 = $t6 * #RET
#RET = $t6 + 0
goto _aSfunc_1$end
goto $label2
$label3:
$t9 = a + 0
$t10 = aa + 0
$t10 = $t10 - 1
push $t10
push 99
call _aSfunc_1
$t9 = $t9 * #RET
#RET = $t9 + 0
goto _aSfunc_1$end
$label2:
goto $label1
$label0:
$t11 = cc + 0
$t12 = 105 + 0
if $t12 != $t11 then goto $label5
printf 0
goto $label4
$label5:
printf 1
$label4:
#RET = 1 + 0
goto _aSfunc_1$end
$label1:
_aSfunc_1$end:
ret _aSfunc_1
init min
$t13 = a + 0
$t14 = b + 0
if $t13 >= $t14 then goto $label6
$t15 = a + 0
#RET = $t15 + 0
goto min$end
goto $label7
$label6:
$t16 = a + 0
$t17 = b + 0
if $t16 != $t17 then goto $label8
$t18 = a + 0
#RET = $t18 + 0
goto min$end
goto $label9
$label8:
$t19 = b + 0
#RET = $t19 + 0
goto min$end
$label9:
$label7:
min$end:
ret min
init max
$t20 = a + 0
$t21 = b + 0
if $t20 <= $t21 then goto $label10
$t22 = a + 0
#RET = $t22 + 0
goto max$end
goto $label11
$label10:
$t23 = b + 0
#RET = $t23 + 0
goto max$end
$label11:
max$end:
ret max
init no_Sfc
$t24 = a + 0
aa = $t24 + 0
$t25 = b + 0
bb = $t25 + 0
$t26 = aa + 0
if $t26 <= 2000 then goto $label12
res = -1 + 0
goto no_Sfc$end
goto $label13
$label12:
$label13:
$t27 = aa + 0
push $t27
$t28 = bb + 0
push $t28
call min
$t29 = #RET + 0
begin = $t29 + 0
$t30 = aa + 0
push $t30
$t31 = bb + 0
push $t31
call max
$t32 = #RET + 0
end = $t32 + 0
$t33 = begin + 0
$t34 = end + 0
$t33 = $t33 + $t34
$t35 = end + 0
$t36 = begin + 0
$t35 = $t35 - $t36
$t35 = $t35 + 1
$t33 = $t33 * $t35
$t33 = $t33 / 2
res = $t33 + 0
no_Sfc$end:
ret no_Sfc
init print1
printf 2
$t37 = res1 + 0
printf $t37
$t38 = res2 + 0
$t38 = $t38 + 2
$t38 = $t38 - 1
$t38 = $t38 - 1
printf 3
printf $t38
print1$end:
ret print1
init print2
$t39 = res + 0
if $t39 == -1 then goto $label14
$t40 = res + 0
printf 4
printf $t40
goto $label15
$label14:
printf 5
$label15:
print2$end:
ret print2
init main
scanf int s_firi
scanf int s_seci
scanf char s_firc
scanf char s_secc
$t41 = s_firi + 0
if $t41 >= 0 then goto $label16
printf 6
exit 
goto $label17
$label16:
$t42 = s_seci + 0
if $t42 >= 0 then goto $label18
printf 6
exit 
goto $label19
$label18:
$label19:
$label17:
$t43 = s_firi + 0
$t44 = s_seci + 0
if $t43 < $t44 then goto $label20
$t45 = s_firi + 0
ni = $t45 + 0
goto $label21
$label20:
$t46 = s_seci + 0
ni = $t46 + 0
$label21:
$t47 = ni + 0
if $t47 > 0 then goto $label22
$label24:
$t48 = ni + 0
if $t48 > 0 then goto $label25
$t49 = ni + 0
$t49 = $t49 + 1
ni = $t49 + 0
goto $label24
$label25:
goto $label23
$label22:
$t50 = ni + 0
$t50 = $t50 + 1
ni = $t50 + 0
$label23:
$t51 = s_firc + 0
$t52 = s_secc + 0
$t51 = $t51 - $t52
$t53 = 1 + 0
if $t53 != $t51 then goto $label27
nc = 1 + 0
goto $label26
$label27:
$t54 = 2 + 0
if $t54 != $t51 then goto $label28
nc = 2 + 0
goto $label26
$label28:
$t55 = -1 + 0
if $t55 != $t51 then goto $label29
nc = 3 + 0
goto $label26
$label29:
$t56 = -2 + 0
if $t56 != $t51 then goto $label30
nc = 4 + 0
goto $label26
$label30:
nc = 5 + 0
$label26:
$t57 = ni + 0
push $t57
push 105
call _aSfunc_1
$t58 = #RET + 0
resultI = $t58 + 0
$t59 = nc + 0
push $t59
push 99
call _aSfunc_1
$t60 = #RET + 0
resultC = $t60 + 0
$t61 = resultI + 0
push $t61
$t62 = resultC + 0
push $t62
call print1
$t63 = resultI + 0
push $t63
$t64 = resultC + 0
push $t64
call no_Sfc
call print2
exit 
exit 
