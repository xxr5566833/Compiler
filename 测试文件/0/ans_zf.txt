测试用例1
input:
2
a-3 4
f

output:
expre:-7 
string:!#$&'()*+,-./:;<=>?@[]^_`{|}~

测试用例2:
input:
2 
b10
d26

output:
fibo:55 
abcdefghijklmnopqrstuvwxyz

测试用例3::
input:
1
e15 24

output:
gcd:3

输入输出说明：
首先输入一个整数num，表示需要进行的操作数,接下来的num行，每行开头为一个字符
a表示复杂表达式计算，后面读入两个整数x,y，计算出+((x+y) - (-y*(-2)) + (-2*0))（实际上是x-y）的结果
b表示计算第n个斐波那契数,后面读入n
d表示输出字母表前m个字母，读入一个整数m，输出字母表前m个字母的小写形式，至多26个字母
e表示计算两个数的最大公约数，读入两个整数_a,_b，计算两个数的最大公约数
f表示输出字符串string:!#$%&'()*+,-./:;<=>?@[\]^_`{|}~

注意，在MARS里面输入字符不需要按回车键